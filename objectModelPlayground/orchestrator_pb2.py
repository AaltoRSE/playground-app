# ===================================================================================
# Copyright (C) 2019 Fraunhofer Gesellschaft. All rights reserved.
# ===================================================================================
# This Graphene software file is distributed by Fraunhofer Gesellschaft
# under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ===============LICENSE_END==========================================================
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: orchestrator.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12orchestrator.proto\"\x19\n\x08RunLabel\x12\r\n\x05label\x18\x01 \x01(\t\"\xde\x01\n\x1aOrchestrationConfiguration\x12\x11\n\tblueprint\x18\x01 \x01(\t\x12\x12\n\ndockerinfo\x18\x02 \x01(\t\x12?\n\nprotofiles\x18\x03 \x03(\x0b\x32+.OrchestrationConfiguration.ProtofilesEntry\x12\x11\n\tqueuesize\x18\x04 \x01(\x05\x12\x12\n\niterations\x18\x05 \x01(\x05\x1a\x31\n\x0fProtofilesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"]\n\x13OrchestrationStatus\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0c\n\x04\x63ode\x18\x02 \x01(\x05\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\x16\n\x0e\x61\x63tive_threads\x18\x04 \x01(\x05\"T\n%OrchestrationObservationConfiguration\x12\x12\n\nname_regex\x18\x01 \x01(\t\x12\x17\n\x0f\x63omponent_regex\x18\x02 \x01(\t\"\xa2\x01\n\x12OrchestrationEvent\x12\x0b\n\x03run\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x11\n\tcomponent\x18\x03 \x01(\t\x12/\n\x06\x64\x65tail\x18\x04 \x03(\x0b\x32\x1f.OrchestrationEvent.DetailEntry\x1a-\n\x0b\x44\x65tailEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32\xa7\x02\n\x0cOrchestrator\x12?\n\ninitialize\x12\x1b.OrchestrationConfiguration\x1a\x14.OrchestrationStatus\x12H\n\x07observe\x12&.OrchestrationObservationConfiguration\x1a\x13.OrchestrationEvent0\x01\x12&\n\x03run\x12\t.RunLabel\x1a\x14.OrchestrationStatus\x12\x35\n\x12stop_orchestration\x12\t.RunLabel\x1a\x14.OrchestrationStatus\x12-\n\nget_status\x12\t.RunLabel\x1a\x14.OrchestrationStatusb\x06proto3')



_RUNLABEL = DESCRIPTOR.message_types_by_name['RunLabel']
_ORCHESTRATIONCONFIGURATION = DESCRIPTOR.message_types_by_name['OrchestrationConfiguration']
_ORCHESTRATIONCONFIGURATION_PROTOFILESENTRY = _ORCHESTRATIONCONFIGURATION.nested_types_by_name['ProtofilesEntry']
_ORCHESTRATIONSTATUS = DESCRIPTOR.message_types_by_name['OrchestrationStatus']
_ORCHESTRATIONOBSERVATIONCONFIGURATION = DESCRIPTOR.message_types_by_name['OrchestrationObservationConfiguration']
_ORCHESTRATIONEVENT = DESCRIPTOR.message_types_by_name['OrchestrationEvent']
_ORCHESTRATIONEVENT_DETAILENTRY = _ORCHESTRATIONEVENT.nested_types_by_name['DetailEntry']
RunLabel = _reflection.GeneratedProtocolMessageType('RunLabel', (_message.Message,), {
  'DESCRIPTOR' : _RUNLABEL,
  '__module__' : 'orchestrator_pb2'
  # @@protoc_insertion_point(class_scope:RunLabel)
  })
_sym_db.RegisterMessage(RunLabel)

OrchestrationConfiguration = _reflection.GeneratedProtocolMessageType('OrchestrationConfiguration', (_message.Message,), {

  'ProtofilesEntry' : _reflection.GeneratedProtocolMessageType('ProtofilesEntry', (_message.Message,), {
    'DESCRIPTOR' : _ORCHESTRATIONCONFIGURATION_PROTOFILESENTRY,
    '__module__' : 'orchestrator_pb2'
    # @@protoc_insertion_point(class_scope:OrchestrationConfiguration.ProtofilesEntry)
    })
  ,
  'DESCRIPTOR' : _ORCHESTRATIONCONFIGURATION,
  '__module__' : 'orchestrator_pb2'
  # @@protoc_insertion_point(class_scope:OrchestrationConfiguration)
  })
_sym_db.RegisterMessage(OrchestrationConfiguration)
_sym_db.RegisterMessage(OrchestrationConfiguration.ProtofilesEntry)

OrchestrationStatus = _reflection.GeneratedProtocolMessageType('OrchestrationStatus', (_message.Message,), {
  'DESCRIPTOR' : _ORCHESTRATIONSTATUS,
  '__module__' : 'orchestrator_pb2'
  # @@protoc_insertion_point(class_scope:OrchestrationStatus)
  })
_sym_db.RegisterMessage(OrchestrationStatus)

OrchestrationObservationConfiguration = _reflection.GeneratedProtocolMessageType('OrchestrationObservationConfiguration', (_message.Message,), {
  'DESCRIPTOR' : _ORCHESTRATIONOBSERVATIONCONFIGURATION,
  '__module__' : 'orchestrator_pb2'
  # @@protoc_insertion_point(class_scope:OrchestrationObservationConfiguration)
  })
_sym_db.RegisterMessage(OrchestrationObservationConfiguration)

OrchestrationEvent = _reflection.GeneratedProtocolMessageType('OrchestrationEvent', (_message.Message,), {

  'DetailEntry' : _reflection.GeneratedProtocolMessageType('DetailEntry', (_message.Message,), {
    'DESCRIPTOR' : _ORCHESTRATIONEVENT_DETAILENTRY,
    '__module__' : 'orchestrator_pb2'
    # @@protoc_insertion_point(class_scope:OrchestrationEvent.DetailEntry)
    })
  ,
  'DESCRIPTOR' : _ORCHESTRATIONEVENT,
  '__module__' : 'orchestrator_pb2'
  # @@protoc_insertion_point(class_scope:OrchestrationEvent)
  })
_sym_db.RegisterMessage(OrchestrationEvent)
_sym_db.RegisterMessage(OrchestrationEvent.DetailEntry)

_ORCHESTRATOR = DESCRIPTOR.services_by_name['Orchestrator']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ORCHESTRATIONCONFIGURATION_PROTOFILESENTRY._options = None
  _ORCHESTRATIONCONFIGURATION_PROTOFILESENTRY._serialized_options = b'8\001'
  _ORCHESTRATIONEVENT_DETAILENTRY._options = None
  _ORCHESTRATIONEVENT_DETAILENTRY._serialized_options = b'8\001'
  _RUNLABEL._serialized_start=22
  _RUNLABEL._serialized_end=47
  _ORCHESTRATIONCONFIGURATION._serialized_start=50
  _ORCHESTRATIONCONFIGURATION._serialized_end=272
  _ORCHESTRATIONCONFIGURATION_PROTOFILESENTRY._serialized_start=223
  _ORCHESTRATIONCONFIGURATION_PROTOFILESENTRY._serialized_end=272
  _ORCHESTRATIONSTATUS._serialized_start=274
  _ORCHESTRATIONSTATUS._serialized_end=367
  _ORCHESTRATIONOBSERVATIONCONFIGURATION._serialized_start=369
  _ORCHESTRATIONOBSERVATIONCONFIGURATION._serialized_end=453
  _ORCHESTRATIONEVENT._serialized_start=456
  _ORCHESTRATIONEVENT._serialized_end=618
  _ORCHESTRATIONEVENT_DETAILENTRY._serialized_start=573
  _ORCHESTRATIONEVENT_DETAILENTRY._serialized_end=618
  _ORCHESTRATOR._serialized_start=621
  _ORCHESTRATOR._serialized_end=916
# @@protoc_insertion_point(module_scope)
